version: '3.8'

x-rails: &rails
  build:
    context: "."
    args:
      UID: "${UID:-1000}"
      GID: "${GID:-${UID:-1000}}"
      RUBY_VERSION: '3.2.2'
    dockerfile: Dockerfile.dev
  image: tekncoach/rails/cli
  env_file: .env
  tmpfs:
    - /tmp
  # Keeps the stdin open, so we can attach to our app container's process and
  # do stuff such as `byebug` or `binding.pry`
  stdin_open: true
  # Allows us to send signals (CTRL+C, CTRL+P + CTRL+Q) into the container
  tty: true
  volumes:
    - .:/rails:cached
    - ruby-bundle-cache:/bundle
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_started

services:
  web:
    <<: *rails
    # entrypoint: /docker-entrypoint.sh
    command: bash -c "rm -f tmp/pids/server.pid && bin/dev web=1,all=0"
    ports:
      - '3000:3000'
    # container_name: tekncoach_rails

  assets:
    <<: *rails
    command: bash -c "bin/dev web=0,all=1"
    depends_on:
      - web

  db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 5s
      retries: 30
    volumes:
      - ./tmp/postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:7-alpine"
    ports:
      - 6379
    volumes:
      - ./tmp/redis_data:/var/lib/redis/data

volumes:
  ruby-bundle-cache:
    external: true
